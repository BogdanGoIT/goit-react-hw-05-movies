{"version":3,"file":"static/js/847.dbf19d44.chunk.js","mappings":"gNAkEA,UA1DqB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,IALAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,kBAA4BR,GAASS,KAAKL,EAC7C,GAAE,CAACJ,KAGCG,EACD,OAAO,KAGX,IAAQO,EAAgEP,EAAhEO,cAAeC,EAAiDR,EAAjDQ,eAAgBC,EAAiCT,EAAjCS,WAAYC,EAAqBV,EAArBU,SAAUC,EAAWX,EAAXW,OAEvDC,EAAY,iBAAGV,QAAH,IAAGA,GAAH,UAAGA,EAAUW,aAAb,aAAG,EAAiBC,YAApB,QAA4B,UAE9C,OAEI,4BACI,yBAAI,SAAC,KAAD,CAAMC,GAAIH,EAAV,wBAEJ,UAAC,IAAD,CAAKI,QAAQ,OAAOC,GAAG,UAAvB,WAEI,SAAC,IAAD,CAAKC,SAAS,MAAd,UACS,gBAAKC,IAAG,8CAAyCZ,GAAiBa,IAAI,QAG/E,UAAC,IAAD,CAAKF,SAAS,MAAd,WACI,wBAAKV,KACL,wCAAgBC,EAAhB,QACA,sCACA,uBAAIC,KACJ,oCACA,SAAC,IAAD,CAAKO,GAAG,KAAKD,QAAQ,OAArB,SACKL,EAAOU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OAAgB,UAAC,IAAD,CAAKN,GAAG,KAAKO,GAAG,OAAhB,cAAkCD,EAAlC,MAA4BD,EAA5C,aAMxB,UAAC,IAAD,CAAKL,GAAG,KAAKQ,EAAE,OAAf,WACI,yBACA,SAAC,KAAD,CAAMV,GAAG,OAAOF,MAAO,CAACC,KAAMF,GAA9B,qBAEA,yBACA,SAAC,KAAD,CAAMG,GAAG,UAAUF,MAAO,CAACC,KAAMF,GAAjC,2BAIJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,6CAApB,UACI,SAAC,KAAD,QAIf,C,oBChED,IAAMC,EAAO,mCACPC,EAAO,+BAyEb,IAAMC,EAAM,CACRC,YAxEJ,SAAqBC,GACjB,OACIC,MAAM,GAAD,OAAIJ,EAAJ,iCAAoCD,EAApC,kBAAqDI,EAArD,+CACJ1B,MAAK,SAAA4B,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAER,EA8DGY,cA5DJ,WACI,OACIP,MAAM,GAAD,OAAIJ,EAAJ,qCAAwCD,IAC5CtB,MAAK,SAAA4B,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAER,EAkDGa,kBAhDJ,SAA2B5C,GAEnB,OACAoC,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBhC,EAArB,oBAAwC+B,EAAxC,oBACJtB,MAAK,SAAA4B,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,EAoCGc,UAlCJ,SAAmB7C,GAEX,OACAoC,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBhC,EAArB,4BAAgD+B,EAAhD,oBACJtB,MAAK,SAAA4B,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,EAsBGe,aApBJ,SAAsB9C,GAEd,OACAoC,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBhC,EAArB,4BAAgD+B,EAAhD,2BACJtB,MAAK,SAAA4B,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,GAUD,K","sources":["pages/MovieDetails.js","services/movies-api.js"],"sourcesContent":["import { Box } from \"components/Box\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nimport moviesApi from 'services/movies-api';\n\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        moviesApi.fetchMovieDetalis(movieId).then(setMovie)\n    }, [movieId])\n\n\n    if (!movie) {\n        return null\n    }\n\n    const { backdrop_path, original_title, popularity, overview, genres } = movie;\n\n    const backLinkHref = location?.state?.from ?? '/movies';\n    \n    return (\n        \n        <div>\n            <h3><Link to={backLinkHref}>Go back</Link></h3>\n            {/* MovieDetails Now showing product with id - {movieId} */}\n            <Box display=\"flex\" as=\"article\">\n                \n                <Box maxWidth=\"40%\" >\n                        {<img src={`https://image.tmdb.org/t/p/original/${backdrop_path}`} alt=\"\" />}\n                </Box>\n\n                <Box maxWidth=\"60%\" >\n                    <h3>{original_title}</h3>\n                    <p>User score: {popularity}%</p>\n                    <h4>Overview</h4>\n                    <p>{overview}</p>\n                    <h5>Genres</h5>\n                    <Box as=\"ul\" display=\"flex\">\n                        {genres.map(({id, name}) => <Box as=\"li\" mr=\"10px\" key={id}> {name} </Box>)}\n                    </Box>\n                </Box>\n                    \n            </Box>\n\n            <Box as=\"ul\" p=\"10px\" >\n                <li>\n                <Link to=\"cast\" state={{from: backLinkHref}}>Cast</Link>\n                </li>\n                <li>\n                <Link to=\"reviews\" state={{from: backLinkHref}}>Reviews</Link>\n                </li>\n            </Box>\n            \n            <Suspense fallback={<div>Loading page...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n}\n\nexport default MovieDetails;","const API_KEY = `1b50ba0e0b99203af5e26bdcee6d2298`;\nconst baseURL = `https://api.themoviedb.org/3`;\n\nfunction fetchMovies(query){\n    return (\n        fetch(`${baseURL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n}\n\nfunction fetchTrending(){\n    return (\n        fetch(`${baseURL}/trending/all/day?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n}\n\nfunction fetchMovieDetalis(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nfunction fetchCast(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nfunction fetchReviews(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nconst api = {\n    fetchMovies,\n    fetchTrending,\n    fetchMovieDetalis,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default api"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","moviesApi","then","backdrop_path","original_title","popularity","overview","genres","backLinkHref","state","from","to","display","as","maxWidth","src","alt","map","id","name","mr","p","Suspense","fallback","API_KEY","baseURL","api","fetchMovies","query","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetalis","fetchCast","fetchReviews"],"sourceRoot":""}