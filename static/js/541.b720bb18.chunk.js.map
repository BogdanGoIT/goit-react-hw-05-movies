{"version":3,"file":"static/js/541.b720bb18.chunk.js","mappings":"8LAoCA,UAhCa,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,UAAoBN,GAASO,KAAKH,EACrC,GAAE,CAACJ,IAECG,GAILK,QAAQC,IAAIN,IAIR,0BACI,wBAEKA,EAAKA,KAAKO,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OAA2CD,IACtD,2BACI,gBAAKE,MAAM,MAAMC,IAAG,8CAAyCH,GAAgBI,IAAI,MACjF,uBAAIL,KACJ,uCAAeD,OAHVG,EADE,SAVhB,IAoBd,C,oBClCD,IAAMI,EAAO,mCACPC,EAAO,+BAyEb,IAAMC,EAAM,CACRC,YAxEJ,SAAqBC,GACjB,OACIC,MAAM,GAAD,OAAIJ,EAAJ,iCAAoCD,EAApC,kBAAqDI,EAArD,+CACJf,MAAK,SAAAiB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAER,EA8DGY,cA5DJ,WACI,OACIP,MAAM,GAAD,OAAIJ,EAAJ,qCAAwCD,IAC5CX,MAAK,SAAAiB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAER,EAkDGa,kBAhDJ,SAA2B/B,GAEnB,OACAuB,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBnB,EAArB,oBAAwCkB,EAAxC,oBACJX,MAAK,SAAAiB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,EAoCGc,UAlCJ,SAAmBhC,GAEX,OACAuB,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBnB,EAArB,4BAAgDkB,EAAhD,oBACJX,MAAK,SAAAiB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,EAsBGe,aApBJ,SAAsBjC,GAEd,OACAuB,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBnB,EAArB,4BAAgDkB,EAAhD,2BACJX,MAAK,SAAAiB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,4DAAuBX,IAChD,GAGR,GAUD,K","sources":["components/Cast/Cast.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moviesApi from '../../services/movies-api';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    // console.log(movieId);\n\n    useEffect(() => {\n        moviesApi.fetchCast(movieId).then(setCast)\n    }, [movieId])\n\n    if (!cast) {\n        return null;\n    }\n    \n    console.log(cast);\n\n    return (\n       \n        <div>\n            <ul>\n\n                {cast.cast.map(({ character, name, profile_path, id }) => profile_path &&\n                    <li key={id}>\n                        <img width=\"100\" src={`https://image.tmdb.org/t/p/original/${profile_path}`} alt=\"\" />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                </li>)}\n\n             </ul>\n        </div>\n    )\n}\n\nexport default Cast;","const API_KEY = `1b50ba0e0b99203af5e26bdcee6d2298`;\nconst baseURL = `https://api.themoviedb.org/3`;\n\nfunction fetchMovies(query){\n    return (\n        fetch(`${baseURL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n}\n\nfunction fetchTrending(){\n    return (\n        fetch(`${baseURL}/trending/all/day?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n}\n\nfunction fetchMovieDetalis(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nfunction fetchCast(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nfunction fetchReviews(movieId) {\n\n        return (\n        fetch(`${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Не верный ${API_KEY}`))\n        })\n    )\n\n}\n\nconst api = {\n    fetchMovies,\n    fetchTrending,\n    fetchMovieDetalis,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default api"],"names":["movieId","useParams","useState","cast","setCast","useEffect","moviesApi","then","console","log","map","character","name","profile_path","id","width","src","alt","API_KEY","baseURL","api","fetchMovies","query","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetalis","fetchCast","fetchReviews"],"sourceRoot":""}